<?php

/**
 * @file
 * Installation/uninstallation related functions for the image_captcha module.
 */

/**
 * Implements hook_requirements().
 */
function image_captcha_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'install') {
    // _image_captcha_check_setup() is defined in image_captcha.module.
    module_load_include('module', 'image_captcha');
    // Check if the GD library is available and raise an error when not.
    if (_image_captcha_check_setup(FALSE) & IMAGE_CAPTCHA_ERROR_NO_GDLIB) {
      $requirements['image_captcha_requires_gd'] = array(
        'title' => $t('Image CAPTCHA requires GD library'),
        'description' => $t(
          'The Image CAPTCHA module can not be installed because your PHP setup does not provide the <a href="!gddoc">GD library</a>, which is required to generate images.',
          array('!gddoc' => 'http://www.php.net/manual/en/book.image.php')
        ),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}

/**
 * Move image_captcha settings from variables to config.
 */
function image_captcha_update_1000() {
  // Migrate variables to config.
  $config = config('image_captcha.settings');
  $config->set('image_allowed_chars', update_variable_get('image_captcha_image_allowed_chars', 'aAbBCdEeFfGHhijKLMmNPQRrSTtWXYZ23456789'));
  $config->set('code_length', update_variable_get('image_captcha_code_length', 5));
  $config->set('rtl_support', update_variable_get('image_captcha_rtl_support', 0));
  $config->set('background_color', update_variable_get('image_captcha_background_color', '#ffffff'));
  $config->set('foreground_color', update_variable_get('image_captcha_foreground_color', '#000000'));
  $config->set('foreground_color_randomness', update_variable_get('image_captcha_foreground_color_randomness', 100));
  $config->set('file_format', update_variable_get('image_captcha_file_format', 1));
  $config->set('distortion_amplitude', update_variable_get('image_captcha_distortion_amplitude', 0));
  $config->set('bilinear_interpolation', update_variable_get('image_captcha_bilinear_interpolation', FALSE));
  $config->set('dot_noise', update_variable_get('image_captcha_dot_noise', 0));
  $config->set('line_noise', update_variable_get('image_captcha_line_noise', 0));
  $config->set('noise_level', update_variable_get('image_captcha_noise_level', 5));
  $config->set('font_size', update_variable_get('image_captcha_font_size', 30));
  $config->set('character_spacing', update_variable_get('image_captcha_character_spacing', '1.2'));
  $config->set('fonts', update_variable_get('image_captcha_fonts', ''));
  $config->save();

  // Delete variables.
  update_variable_del('image_captcha_image_allowed_chars');
  update_variable_del('image_captcha_code_length');
  update_variable_del('image_captcha_rtl_support');
  update_variable_del('image_captcha_background_color');
  update_variable_del('image_captcha_foreground_color');
  update_variable_del('image_captcha_foreground_color_randomness');
  update_variable_del('image_captcha_file_format');
  update_variable_del('image_captcha_distortion_amplitude');
  update_variable_del('image_captcha_bilinear_interpolation');
  update_variable_del('image_captcha_dot_noise');
  update_variable_del('image_captcha_line_noise');
  update_variable_del('image_captcha_noise_level');
  update_variable_del('image_captcha_font_size');
  update_variable_del('image_captcha_character_spacing');
  update_variable_del('image_captcha_fonts');
  update_variable_del('image_captcha_fonts_preview_map_cache');
}

/**
 * Implements hook_uninstall()
 */
function image_captcha_uninstall() {
  state_del('image_captcha_fonts_preview_map_cache');
}
